"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContestantSchema = void 0;
const mongoose = require("mongoose");
exports.ContestantSchema = new mongoose.Schema({
    Name: { type: String },
    Registration: { type: mongoose.Schema.Types.ObjectId, ref: 'Registration', unique: true, sparse: true },
    CityText: { type: String },
    Email: { type: String, unique: true, sparse: true },
    Website: { type: String },
    EntryId: { type: Number, unique: true, sparse: true },
    PhoneNumber: { type: String, unique: true, sparse: true },
    City: { type: mongoose.Schema.Types.ObjectId, ref: 'City' },
    ChildContestants: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Contestant' }],
    IsDuplicate: { type: Boolean },
    Followers: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Registration', index: true }],
    FollowersCount: { type: Number, index: true },
    VotesCount: { type: Number, index: true },
    Score: { type: Number, index: true },
    Videos: [{ type: String }],
    WooProducts: [{ type: mongoose.Schema.Types.ObjectId, ref: 'artistwoocommerce' }]
}, { timestamps: true });
exports.ContestantSchema.index({ Name: 'text', CityText: 'text', Email: 'text', EntryId: 'text', PhoneNumber: 'text' });
const ContestantModel = mongoose.model('Contestant', exports.ContestantSchema);
exports.default = ContestantModel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy9Db250ZXN0YW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFxQztBQU94QixRQUFBLGdCQUFnQixHQUFvQixJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDakUsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBQztJQUNyQixZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0lBQ3ZHLFFBQVEsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUM7SUFDekIsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUM7SUFDbEQsT0FBTyxFQUFFLEVBQUMsSUFBSSxFQUFFLE1BQU0sRUFBQztJQUN2QixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQztJQUNyRCxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBQztJQUN6RCxJQUFJLEVBQUUsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUM7SUFDMUQsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLFlBQVksRUFBRSxDQUFDO0lBQy9FLFdBQVcsRUFBRSxFQUFDLElBQUksRUFBRSxPQUFPLEVBQUM7SUFDNUIsU0FBUyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDO0lBQ3ZGLGNBQWMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtJQUM3QyxVQUFVLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUM7SUFDeEMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDO0lBQ25DLE1BQU0sRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFFLE1BQU0sRUFBQyxDQUFDO0lBQ3hCLFdBQVcsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxHQUFHLEVBQUUsbUJBQW1CLEVBQUMsQ0FBQztDQUNuRixFQUFFLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7QUFFekIsd0JBQWdCLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztBQUNoSCxNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFxQixZQUFZLEVBQUUsd0JBQWdCLENBQUMsQ0FBQztBQUMzRixrQkFBZSxlQUFlLENBQUMiLCJmaWxlIjoibW9kZWxzL0NvbnRlc3RhbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5cbmltcG9ydCB7IENvbnRlc3RhbnREVE8gfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvQ29udGVzdGFudERUTyc7XG5cblxuZXhwb3J0IGludGVyZmFjZSBDb250ZXN0YW50RG9jdW1lbnQgZXh0ZW5kcyBDb250ZXN0YW50RFRPLCBtb25nb29zZS5Eb2N1bWVudCB7fVxuXG5leHBvcnQgY29uc3QgQ29udGVzdGFudFNjaGVtYTogbW9uZ29vc2UuU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgTmFtZTogeyB0eXBlOiBTdHJpbmd9LFxuICAgIFJlZ2lzdHJhdGlvbjogeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1JlZ2lzdHJhdGlvbicsIHVuaXF1ZTogdHJ1ZSwgc3BhcnNlOiB0cnVlIH0sXG4gICAgQ2l0eVRleHQ6IHsgdHlwZTogU3RyaW5nfSxcbiAgICBFbWFpbDogeyB0eXBlOiBTdHJpbmcsIHVuaXF1ZTogdHJ1ZSwgc3BhcnNlOiB0cnVlfSxcbiAgICBXZWJzaXRlOiB7dHlwZTogU3RyaW5nfSxcbiAgICBFbnRyeUlkOiAgeyB0eXBlOiBOdW1iZXIsIHVuaXF1ZTogdHJ1ZSwgc3BhcnNlOiB0cnVlfSxcbiAgICBQaG9uZU51bWJlcjogIHsgdHlwZTogU3RyaW5nLCB1bmlxdWU6IHRydWUsIHNwYXJzZTogdHJ1ZX0sXG4gICAgQ2l0eTogeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ0NpdHknfSxcbiAgICBDaGlsZENvbnRlc3RhbnRzOiBbeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ0NvbnRlc3RhbnQnIH1dLFxuICAgIElzRHVwbGljYXRlOiB7dHlwZTogQm9vbGVhbn0sXG4gICAgRm9sbG93ZXJzOiBbeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1JlZ2lzdHJhdGlvbicsIGluZGV4OiB0cnVlIH1dLFxuICAgIEZvbGxvd2Vyc0NvdW50OiB7IHR5cGU6IE51bWJlciwgaW5kZXg6IHRydWUgfSxcbiAgICBWb3Rlc0NvdW50OiB7IHR5cGU6IE51bWJlciwgaW5kZXg6IHRydWV9LFxuICAgIFNjb3JlOiB7IHR5cGU6IE51bWJlciwgaW5kZXg6IHRydWV9LFxuICAgIFZpZGVvczogW3t0eXBlOiBTdHJpbmd9XSxcbiAgICBXb29Qcm9kdWN0czogW3sgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdhcnRpc3R3b29jb21tZXJjZSd9XVxufSwgeyB0aW1lc3RhbXBzOiB0cnVlIH0pO1xuXG5Db250ZXN0YW50U2NoZW1hLmluZGV4KHsgTmFtZTogJ3RleHQnLCBDaXR5VGV4dDogJ3RleHQnLCBFbWFpbDogJ3RleHQnLCBFbnRyeUlkOiAndGV4dCcsIFBob25lTnVtYmVyOiAndGV4dCcgfSk7XG5jb25zdCBDb250ZXN0YW50TW9kZWwgPSBtb25nb29zZS5tb2RlbDxDb250ZXN0YW50RG9jdW1lbnQ+KCdDb250ZXN0YW50JywgQ29udGVzdGFudFNjaGVtYSk7XG5leHBvcnQgZGVmYXVsdCBDb250ZXN0YW50TW9kZWw7Il19
