{"version":3,"sources":["controllers/contact.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAKzC,MAAM,WAAW,GAAG,UAAU,CAAC,eAAe,CAAC;IAC7C,OAAO,EAAE,UAAU;IACnB,IAAI,EAAE;QACJ,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;QAC/B,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;KACpC;CACF,CAAC,CAAC;AAEH;;;GAGG;AACQ,QAAA,UAAU,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACtD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE;QACpB,KAAK,EAAE,SAAS;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAEF;;;GAGG;AACQ,QAAA,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACvD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtD,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC,OAAO,EAAE,CAAC;IACpD,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC,QAAQ,EAAE,CAAC;IAE5D,MAAM,MAAM,GAAG,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAEtC,IAAI,MAAM,EAAE;QACV,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC5B,OAAO,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;KACjC;IAED,MAAM,WAAW,GAAG;QAClB,EAAE,EAAE,gBAAgB;QACpB,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG;QAC5C,OAAO,EAAE,cAAc;QACvB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;KACvB,CAAC;IAEF,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;QACxC,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC1C,OAAO,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;SACjC;QACD,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,mCAAmC,EAAE,CAAC,CAAC;QACnE,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","file":"contact.js","sourcesContent":["import * as nodemailer from 'nodemailer';\r\nimport { Request, Response } from 'express';\r\n\r\nimport expressValidator = require('express-validator');\r\n\r\nconst transporter = nodemailer.createTransport({\r\n  service: 'SendGrid',\r\n  auth: {\r\n    user: process.env.SENDGRID_USER,\r\n    pass: process.env.SENDGRID_PASSWORD\r\n  }\r\n});\r\n\r\n/**\r\n * GET /contact\r\n * Contact form page.\r\n */\r\nexport let getContact = (req: Request, res: Response) => {\r\n  res.render('contact', {\r\n    title: 'Contact'\r\n  });\r\n};\r\n\r\n/**\r\n * POST /contact\r\n * Send a contact form via Nodemailer.\r\n */\r\nexport let postContact = (req: Request, res: Response) => {\r\n  req.assert('name', 'Name cannot be blank').notEmpty();\r\n  req.assert('email', 'Email is not valid').isEmail();\r\n  req.assert('message', 'Message cannot be blank').notEmpty();\r\n\r\n  const errors = req.validationErrors();\r\n\r\n  if (errors) {\r\n    req.flash('errors', errors);\r\n    return res.redirect('/contact');\r\n  }\r\n\r\n  const mailOptions = {\r\n    to: 'your@email.com',\r\n    from: `${req.body.name} <${req.body.email}>`,\r\n    subject: 'Contact Form',\r\n    text: req.body.message\r\n  };\r\n\r\n  transporter.sendMail(mailOptions, (err) => {\r\n    if (err) {\r\n      req.flash('errors', { msg: err.message });\r\n      return res.redirect('/contact');\r\n    }\r\n    req.flash('success', { msg: 'Email has been sent successfully!' });\r\n    res.redirect('/contact');\r\n  });\r\n};\r\n"]}