{"version":3,"sources":["controllers/register.ts"],"names":[],"mappings":";;;;;;;;;;AACA,yDAA4F;AAK5F,2CAAyC;AAEzC;;;GAGG;AACU,QAAA,KAAK,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,IAAI,KAAoB,CAAC;IACzB,IAAI;QACA,KAAK,GAAG,MAAM,eAAU;aACnB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;aAC5B,IAAI,EAAE,CAAC;KACf;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IACD,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE;QACnB,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,KAAK,CAAC,IAAI;KACxB,CAAC,CAAC;AACP,CAAC,CAAA,CAAC;AAEF;;;GAGG;AACU,QAAA,gBAAgB,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAChF,sBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,aAAqC,EAAE,EAAE;QAClE,IAAI,GAAG,EAAE;YACL,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF;;;GAGG;AACU,QAAA,aAAa,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,MAAM,GAAG,GAAoB,GAAG,CAAC,IAAI,CAAC;IAEtC,MAAM,YAAY,GAAG,IAAI,sBAAiB,CAAC,GAAG,CAAC,CAAC;IAChD,YAAY,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,OAA6B,EAAE,EAAE;QAC1D,IAAI,GAAG,EAAE;YACL,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QAED,MAAM,MAAM,GAA0B;YAClC,OAAO,EAAE,IAAI;YACb,EAAE,EAAE,OAAO,CAAC,GAAG;SAClB,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","file":"register.js","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport { default as RegistrationModel, RegistrationDocument } from '../models/Registration';\r\nimport RegistrationDTO from '../../../shared/RegistrationDTO';\r\nimport * as utils from '../utils';\r\nimport { OperationResult, CreateOperationResult } from '../../../shared/OperationResult';\r\nimport { EventDocument } from '../models/Event';\r\nimport EventModel from '../models/Event';\r\n\r\n/**\r\n * GET /\r\n * Event/{eventId}/Register\r\n */\r\nexport const index = async (req: Request, res: Response, next: NextFunction) => {\r\n    let event: EventDocument;\r\n    try {\r\n        event = await EventModel\r\n            .findById(req.params.eventId)\r\n            .exec();\r\n    } catch (err) {\r\n        console.log(err);\r\n        return next(err);\r\n    }\r\n    res.render('register', {\r\n        title: 'Register voters',\r\n        EventName: event.Name\r\n    });\r\n};\r\n\r\n/**\r\n * GET /\r\n * api/Event/{eventId}/Registrations\r\n */\r\nexport const getRegistrations = (req: Request, res: Response, next: NextFunction) => {\r\n    RegistrationModel.find((err, registrations: RegistrationDocument[]) => {\r\n        if (err) {\r\n            return next(err);\r\n        }\r\n        res.json(registrations);\r\n    });\r\n};\r\n\r\n/**\r\n * PUT /\r\n * api/Event/{eventId}/Registration\r\n */\r\nexport const registerVoter = (req: Request, res: Response, next: NextFunction) => {\r\n    const dto: RegistrationDTO = req.body;\r\n\r\n    const Registration = new RegistrationModel(dto);\r\n    Registration.save((err: any, product: RegistrationDocument) => {\r\n        if (err) {\r\n            return next(err);\r\n        }\r\n\r\n        const result: CreateOperationResult = {\r\n            Success: true,\r\n            Id: product._id\r\n        };\r\n    });\r\n};"]}