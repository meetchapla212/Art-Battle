{"version":3,"sources":["config/passport.ts"],"names":[],"mappings":"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","file":"passport.js","sourcesContent":["import * as passport from 'passport';\r\nimport * as request from 'request';\r\nimport * as passportLocal from 'passport-local';\r\nimport * as passportFacebook from 'passport-facebook';\r\nimport * as _ from 'lodash';\r\n\r\n// import { User, UserType } from '../models/User';\r\nimport { default as User } from '../models/User';\r\nimport { Request, Response, NextFunction } from 'express';\r\n\r\nconst LocalStrategy = passportLocal.Strategy;\r\nconst FacebookStrategy = passportFacebook.Strategy;\r\n\r\npassport.serializeUser<any, any>((user, done) => {\r\n  done(undefined, user.id);\r\n});\r\n\r\npassport.deserializeUser((id, done) => {\r\n  User.findById(id, (err, user) => {\r\n    done(err, user);\r\n  });\r\n});\r\n\r\n\r\n/**\r\n * Sign in using Email and Password.\r\n */\r\npassport.use(new LocalStrategy({ usernameField: 'email' }, (email, password, done) => {\r\n  User.findOne({ email: email.toLowerCase() }, (err, user: any) => {\r\n    if (err) { return done(err); }\r\n    if (!user) {\r\n      return done(undefined, false, { message: `Email ${email} not found.` });\r\n    }\r\n    user.comparePassword(password, (err: Error, isMatch: boolean) => {\r\n      if (err) { return done(err); }\r\n      if (isMatch) {\r\n        return done(undefined, user);\r\n      }\r\n      return done(undefined, false, { message: 'Invalid email or password.' });\r\n    });\r\n  });\r\n}));\r\n\r\n\r\n/**\r\n * OAuth Strategy Overview\r\n *\r\n * - User is already logged in.\r\n *   - Check if there is an existing account with a provider id.\r\n *     - If there is, return an error message. (Account merging not supported)\r\n *     - Else link new OAuth account with currently logged-in user.\r\n * - User is not logged in.\r\n *   - Check if it's a returning user.\r\n *     - If returning user, sign in and we are done.\r\n *     - Else check if there is an existing account with user's email.\r\n *       - If there is, return an error message.\r\n *       - Else create a new account.\r\n */\r\n\r\n\r\n/**\r\n * Sign in with Facebook.\r\n */\r\npassport.use(new FacebookStrategy({\r\n  clientID: process.env.FACEBOOK_ID,\r\n  clientSecret: process.env.FACEBOOK_SECRET,\r\n  callbackURL: '/auth/facebook/callback',\r\n  profileFields: ['name', 'email', 'link', 'locale', 'timezone'],\r\n  passReqToCallback: true\r\n}, (req: any, accessToken, refreshToken, profile, done) => {\r\n  if (req.user) {\r\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\r\n      if (err) { return done(err); }\r\n      if (existingUser) {\r\n        req.flash('errors', { msg: 'There is already a Facebook account that belongs to you. Sign in with that account or delete it, then link it with your current account.' });\r\n        done(err);\r\n      } else {\r\n        User.findById(req.user.id, (err, user: any) => {\r\n          if (err) { return done(err); }\r\n          user.facebook = profile.id;\r\n          user.tokens.push({ kind: 'facebook', accessToken });\r\n          user.profile.name = user.profile.name || `${profile.name.givenName} ${profile.name.familyName}`;\r\n          user.profile.gender = user.profile.gender || profile._json.gender;\r\n          user.profile.picture = user.profile.picture || `https://graph.facebook.com/${profile.id}/picture?type=large`;\r\n          user.save((err: Error) => {\r\n            req.flash('info', { msg: 'Facebook account has been linked.' });\r\n            done(err, user);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  } else {\r\n    User.findOne({ facebook: profile.id }, (err, existingUser) => {\r\n      if (err) { return done(err); }\r\n      if (existingUser) {\r\n        return done(undefined, existingUser);\r\n      }\r\n      User.findOne({ email: profile._json.email }, (err, existingEmailUser) => {\r\n        if (err) { return done(err); }\r\n        if (existingEmailUser) {\r\n          req.flash('errors', { msg: 'There is already an account using this email address. Sign in to that account and link it with Facebook manually from Account Settings.' });\r\n          done(err);\r\n        } else {\r\n          const user: any = new User();\r\n          user.email = profile._json.email;\r\n          user.facebook = profile.id;\r\n          user.tokens.push({ kind: 'facebook', accessToken });\r\n          user.profile.name = `${profile.name.givenName} ${profile.name.familyName}`;\r\n          user.profile.gender = profile._json.gender;\r\n          user.profile.picture = `https://graph.facebook.com/${profile.id}/picture?type=large`;\r\n          user.profile.location = (profile._json.location) ? profile._json.location.name : '';\r\n          user.save((err: Error) => {\r\n            done(err, user);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n}));\r\n\r\n/**\r\n * Login Required middleware.\r\n */\r\nexport let isAuthenticated = (req: Request, res: Response, next: NextFunction) => {\r\n  if (req.isAuthenticated()) {\r\n    return next();\r\n  }\r\n  res.redirect('/login');\r\n};\r\n\r\n/**\r\n * Authorization Required middleware.\r\n */\r\nexport let isAuthorized = (req: Request, res: Response, next: NextFunction) => {\r\n  const provider = req.path.split('/').slice(-1)[0];\r\n\r\n  if (_.find(req.user.tokens, { kind: provider })) {\r\n    next();\r\n  } else {\r\n    res.redirect(`/auth/${provider}`);\r\n  }\r\n};\r\n"]}